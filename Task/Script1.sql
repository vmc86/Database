/*--https://metanit.com/sql/sqlserver/

База данных магазин-склад "Алкомаркет"

Товары которые имеют уникальный идентификатор и количество  (Балтика 9 - 1111111111111 - количествол 5)
У товаров есть категории - товар к 1 категории

Храним данные о поставщике
Храним данные о покупателях

Храним данные о поступлении товара (когда, что, сколько, за сколько и кто поставщик)
Храним данные о продаже товара (когда, что, сколько, за сколько и кто покупатель)


Задача.

1. Создать базу данных.
2. Создать проект в Visual Studio
3. Настроить развертывание базы данных.
4. Создать структру таблиц (скрипты) для хранения информации согласно заданию.


*/

/*
Задание 2.

1. Завершить создание структры таблиц (скрипты) для хранения информации согласно заданию.
2. В пост-деплой скрипте описать вставку тестовых данных в созданные таблицы
	Товары - 10
	У каждого товара - до 3 категорий
	Поставщики - 3
	Покупатели - 3
	Покупки - по каждому товару от 2-3 с датами от 1 до 30 сентября
	Продажи - по каждому товару от 2-3 с датами от 1 до 30 сентября
3. Скрипты должны работать - т.е развертываться на сервере
*/

/*
Задание 3.
	Напишите в скрипте - не участвующем в развертывании:
	1. Запросы на выборку всех данных из всех таблиц (SELECT)
	2. 3 Запроса на обновление данных в любой из таблиц (UPDATE)
	3. 3 Запроса на удаление данных из таблиц (DELETE)

	Доработка структуры:
	У поставщика и покупателя есть страна. Страна это отдельная таблица.
	Заполнить таблицу поставшиков - 3 записи
	Заполнить таблицу покупателей - 3 записи
	Заполнить таблицу стран - 5 записей

*/
/*
Задание 5.

1. Создать таблицу операций (минимально сумма, дата)
2. Создать процедуру "Приход" (покупка)
	- добавить запись в таблицу прихода товара
	- добавить записть в таблицу операций (минус денег)
3. Создать процедуру "Уход" (продажа)
	- добавить запись в таблицу ухода товара
	- добавить записть в таблицу операций (плюс денег)
4. В скрипте ПостДеплой добавить первую операцию прихода
	денег (начальный капитал)
5. В скрипте ПостДеплой вместо INSERT в таблицу приходов
	и уходов товара использовать процедуры, чтобы
	записи в таблицах создавались в соотвествии логикой
6. Логика процедур
	- цена товара не может быть меньше или равной 0
	- количество прихода и ухода товара не может 
		быть меньше или равной 0
	- нельзя добавить приход если на оплату товара 
		не хватает денег
	- нельзя добавить уход товара если количества товара 
		на складе не хватает
7. Внутри процедур должны быть транзакции для
	обеспечения логической целостности данных

	*/